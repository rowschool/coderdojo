<script>
    // Hoisted function to retrieve stated query param (`key`) value
    function getQuery(key) {
        var query = window.location.search.substring(1);
        var key_values = query.split('&');
        var params = {};
        key_values.map(function (key_val) {
            var key_val_arr = key_val.split('=');
            params[key_val_arr[0]] = key_val_arr[1];
        });
        if (typeof params[key] != 'undefined') {
            return params[key];
        }
        return '';
    }

    // Retrieve Markdown page from GitHub repo for rendering on /lesson-plan path.
    window.onload = function () {
        let src = getQuery('src');

        if (!src.length) {
            src = 'https://raw.githubusercontent.com/rowschool/coderdojo-lessons/main/README.md';
        }
        
        // Create shadow DOM element to render Markdown page.
        const md = document.createElement('zero-md');
        md.setAttribute('src', src);
        md.setAttribute('no-shadow', '');
        document.getElementById('mdcontainer').append(md);

        // Render Markdown page.
        if (!window.location.search.length) {
            const oldHref = window.location.href;
            const newHref = `${oldHref}?src=${src}`;
            window.location.href = newHref;
        }
    }

    // DOM-ready GitHub Markdown workarounds. See comments below for more details.
    document.addEventListener('DOMContentLoaded', function() {
        const gitHubPagesOrigin = 'https://raw.githubusercontent.com/rowschool/coderdojo-lessons/main/';

        // Set timeout because it takes ~1sec for request to process .md file.
        // If ToC doesn't render, review `timeout=1000ms`.
        window.setTimeout(() => {
            const shadowDOMRoot = document.querySelector('#mdcontainer zero-md').shadowRoot;

            // Update all `README.md` ToC links to redirect to the CoderDojo website,
            // appending `basePath` and the link to the `.md` doc containing the lesson.
            shadowDOMRoot.querySelectorAll('a').forEach(function(link) {
                if (window.location.pathname.includes('lesson-plan') && 
                    window.location.search.includes('README.md') &&
                    link.href.includes(gitHubPagesOrigin)) {

                    const urlObj = new URL(window.location.href);
                    urlObj.search = '';
                    const basePath = urlObj.toString();
                    const newHref = `${basePath}?src=${link.href}`;
                    link.href = newHref;
                }
            });

            // Update all lesson `img` tags to render correctly because we're rendering relative URLs in the docs.
            shadowDOMRoot.querySelectorAll('img').forEach(function(image) {
                // Accounting for developing in localhost
                // This is a GitHub Pages quirk, because github.com/rowschool holds the `coderdojo` repo, 
                // and the live URL is `rowschool.com/coderdojo`.
                // Dev at `localhost` is just `localhost:port`, so the `pathname` must be taken into account.
                let oldOrigin = `${window.location.origin}/coderdojo/`;
                if (window.location.href.includes('localhost')) {
                    oldOrigin = `${window.location.origin}/`;
                }

                const newOrigin = gitHubPagesOrigin;
                const newSource = image.src.replace(oldOrigin, newOrigin);
                image.src = newSource;
            });
        }, 1000);
    });
</script>


{{#> base}}
  <head>
      <script type="module" src="https://cdn.jsdelivr.net/gh/zerodevx/zero-md@2/dist/zero-md.min.js"></script>
  </head>

  <div id="mdcontainer"></div>
{{/base}}